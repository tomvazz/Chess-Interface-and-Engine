
public class Scoring {

	public int[][] pieceSquareTables(String piece, String playerTurn, String[][] piecetxt) {
		
		// TOP LEFT CORNER IS BOTTOM LEFT FOR ACTUAL BOARD
		
		int[][] score = new int[8][8];
		
		
		int[][] pawn = {
		{0,  5,  5,  0,  5, 10, 50, 50}, 
		{0, 10, -5,  0,  5, 10, 50, 50},
		{0, 10,-10,  0, 10, 20, 50, 50},
		{0,-25,  0, 25, 27, 30, 50, 50},
		{0,-25,  0, 25, 27, 30, 50, 50},
		{0, 10,-10,  0, 10, 20, 50, 50},
		{0, 10, -5,  0,  5, 10, 50, 50},
		{0,  5,  5,  0,  5, 10, 50, 50}
		};
		
		
		
		int[][] knight = {
		{-50,-40,-30,-30,-30,-30,-40,-50}, 
		{-40,-20,  5,  0,  5,  0,-20,-40},
		{-20,  0, 10, 15, 15, 10,  0,-30},
		{-30,  5, 15, 20, 20, 15,  0,-30},
		{-30,  5, 15, 20, 20, 15,  0,-30},
		{-20,  0, 10, 15, 15, 10,  0,-30},
		{-40,-20,  5,  0,  5,  0,-20,-40},
		{-50,-40,-30,-30,-30,-30,-40,-50}
		};
		
		
		
		int[][] bishop = {
		{-20,-10,-10,-10,-10,-10,-10,-20}, 
		{-10,  5, 10,  0,  5,  0,  0,-10},
		{-40,  0, 10, 10,  5,  5,  0,-10},
		{-40,  0, 10, 10, 10, 10,  0,-10},
		{-40,  0, 10, 10, 10, 10,  0,-10},
		{-40,  0, 10, 10,  5,  5,  0,-10},
		{-10,  5, 10,  0,  5,  0,  0,-10},
		{-20,-10,-10,-10,-10,-10,-10,-20}
		};
		
		
		
		int[][] rook = {
		{0, -5, -5, -5, -5, -5, -5,  0}, 
		{0,  0,  0,  0,  0,  0, 10,  0},
		{0,  0,  0,  0,  0,  0, 10,  0},
		{5,  0,  0,  0,  0,  0, 10,  0},
		{5,  0,  0,  0,  0,  0, 10,  0},
		{0,  0,  0,  0,  0,  0, 10,  0},
		{0,  0,  0,  0,  0,  0, 10,  0},
		{0, -5, -5, -5, -5, -5, -5,  0}
		};
		
		
		
		int[][] queen = {
		{-20,-10,-10,  0, -5,-10,-10,-20}, 
		{-10,  0,  5,  0,  0,  0,  0,-10},
		{-10,  5,  5,  5,  5,  5,  0,-10},
		{ -5,  0,  5,  5,  5,  5,  0, -5},
		{ -5,  0,  5,  5,  5,  5,  0, -5},
		{-10,  0,  5,  5,  5,  5,  0,-10},
		{-10,  0,  0,  0,  0,  0,  0,-10},
		{-20,-10,-10, -5, -5,-10,-10,-20}
		};
		
		int[][] kingEarly = {
		{ 20, 20,-10,-20,-30,-30,-30,-30}, 
		{ 30, 20,-20,-30,-40,-40,-40,-40},
		{ 10,  0,-20,-30,-40,-40,-40,-40},
		{  0,  0,-20,-40,-50,-50,-50,-50},
		{  0,  0,-20,-40,-50,-50,-50,-50},
		{ 10,  0,-20,-30,-40,-40,-40,-40},
		{ 30, 20,-20,-30,-40,-40,-40,-40},
		{ 20, 20,-10,-20,-30,-30,-30,-30}
		};
		
		int[][] kingLate = {
		{-50,-30,-30,-30,-30,-30,-30,-50}, 
		{-30,-30,-10,-10,-10,-10,-20,-40},
		{-30,  0, 20, 30, 30, 20,-10,-30},
		{-30,  0, 30, 40, 40, 30,  0,-20},
		{-30,  0, 30, 40, 40, 30,  0,-20},
		{-30,  0, 20, 30, 30, 20,-10,-30},
		{-30,-30,-10,-10,-10,-10,-20,-40},
		{-50,-30,-30,-30,-30,-30,-30,-50}
		};
		
		// king priorities change late in game
		int piececount = 0;
		for (int a= 0; a < 8; a++) {
			for (int b = 0; b < 8; b++) {
				if (!piecetxt[a][b].equals(". ")) {
					piececount++;
				}
			}
		}
		
		
		if (piece == "p") {
			score = pawn;
		} else if (piece == "n") {
			score = knight;
		} else if (piece == "b") {
			score = bishop;
		} else if (piece == "r") {
			score = rook;
		} else if (piece == "q") {
			score = queen;
		} else if (piece == "k") {
			if (piececount > 8) {
				score = kingEarly;
			} else if (piececount <= 8) {
				score = kingLate;
			}
		}
		
		// flip board for opposite color
		if (playerTurn == "black") {
			int[][] tempScore = new int[8][8];
			for (int a = 0; a < 8; a++) {
				for (int b = 0; b < 8; b++) {
					tempScore[a][b] = score[a][7-b];
				}
			}
			score = tempScore;
		}
		
				
		return score;		
	}
	
}
